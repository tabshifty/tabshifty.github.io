(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22bf14"],{f0b6:function(e,n,o){"use strict";o.r(n);var c=o("7a23"),t={class:"copBox"},l=Object(c["createElementVNode"])("h3",null,"浅拷贝",-1),d=Object(c["createElementVNode"])("p",null," 浅拷贝只在第一层对属性进行赋值操作，如果属性是基本数据则直接赋值(存放在栈内存中)，如果是引用类型则对指针地址进行赋值，实际的值存放在堆内存中 ",-1),r=Object(c["createElementVNode"])("p",null," 代码参考 ",-1),a=Object(c["createElementVNode"])("p",null," 其他方式: ",-1),p=Object(c["createElementVNode"])("h3",null,"深拷贝",-1),s=Object(c["createElementVNode"])("p",null," 深拷贝在赋值是类似于每层的对象属性都会进行新建一个对象进行拷贝, 复制整个对象，返回新的引用指针 ",-1),u=Object(c["createElementVNode"])("p",null," 代码参考 ",-1),j=Object(c["createElementVNode"])("p",null," 其他方式: ",-1);function b(e,n,o,b,y,i){var O=Object(c["resolveComponent"])("CodeSnippet"),m=Object(c["resolveComponent"])("Text");return Object(c["openBlock"])(),Object(c["createElementBlock"])("div",t,[l,d,r,Object(c["createVNode"])(O,{codeLanguge:"javascript",rawCode:y.copyjs.code.shadow},null,8,["rawCode"]),a,Object(c["createVNode"])(m,{mdSource:y.copyjs.markdown.shadow},null,8,["mdSource"]),p,s,u,Object(c["createVNode"])(O,{codeLanguge:"javascript",rawCode:y.copyjs.code.deep},null,8,["rawCode"]),j,Object(c["createVNode"])(m,{mdSource:y.copyjs.markdown.deep},null,8,["mdSource"])])}var y=o("da2f"),i="// 浅拷贝简单的实现代码\nconst shadowCopy = function(clone) {\n    const cloned = {}\n    for (let key in clone) {\n        cloned[key] = clone[key]\n    }\n    return cloned\n}\n",O=" 1. 使用Object.assign()的方法实现, 但当对象只有一层基础类型的数据时属于深拷贝\n 2. 展开运算符是一个 es6 / es2015特性，它提供了一种非常方便的方式来执行浅拷贝，与 Object.assign ()的功能相同\n 3. Array.prototype.concat() 和 Array.prototype.slice()\n",m="const deepCopy = function(clone) {\n    const cloned = Array.isArray(clone) ? [] : {}\n    for (let key in clone) {   \n        if (typeof clone[key] === 'object') {\n            cloned[key] = deepCopy(clone[key])\n        } else {\n            cloned[key] = clone[key]\n        }\n    }\n    return cloned\n}\n",w=" 1. 用JSON.stringify把对象转成字符串，再用JSON.parse把字符串转成新的对象(可以转成JSON格式的对象才可以这样用)\n 2. 使用Object.create()方法\n",k={code:{shadow:i,deep:m},markdown:{shadow:O,deep:w}},f=o("abfd"),N={data:function(){return{copyjs:k}},components:{CodeSnippet:y["a"],Text:f["a"]}},V=o("6b0d"),C=o.n(V);const h=C()(N,[["render",b]]);n["default"]=h}}]);
//# sourceMappingURL=chunk-2d22bf14.2093ea71.js.map